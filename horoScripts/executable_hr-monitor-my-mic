#!/usr/bin/env bash
#set -x # uncomment for debugging

getVol() { # get volume of the default source left channel
    pactl get-source-volume @DEFAULT_SOURCE@ | grep -Po '[0-9]{1,3}(?=%.*,)' 
}

getDefSource() { # get default source
    pactl list sources short | grep -Po "^([0-9]+)(?=\s`pactl get-default-source`)"
}

curVol=$(getVol)
initVol=$curVol
spamProtectionTime=$(date +"%s") # current time, the +"%s" formats the date as seconds since epoch

pactl subscribe | while read -r event; do
    # inteligent and! (&&) is used to avoid the getDefSource event to trigger in a loop (it fires an event 'on client')
    # third condition is an actual change in volume
    if [[ $event == *"on source"* ]] && [[ $event == *"`getDefSource`"* ]] && [[ $curVol != $(getVol) ]]; then
        # the get-default-source fires events that do not contain 'on source'
        newVol=$(getVol)
        texttonotify="Volume changed from $curVol to $newVol (Monitor initial volume was $initVol)"
        curVol=$newVol

        echo "$(date +"%Y-%m-%d %H:%M:%S") MIC CHANGE DETECTED $texttonotify"
        if [[ $(date +"%s") -gt $spamProtectionTime ]]; then
            notify-send "MIC CHANGE DETECTED" "$texttonotify" -u critical -i microphone-sensitivity-low
            spamProtectionTime=$(date -d "+3 seconds" +"%s") # Notify only once every 3 seconds
        else
            echo "SPAM PROTECTION - No notification send."
        fi
    fi
done
